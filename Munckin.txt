Munchkin файл описания

1. Общие сведения:
1.1 Планирование
	Игра будет разработана в 3 этапа: 
		линейный консольный манчкин - срок написания: до 17 июля, 
		полноценный манчкин с графическим интерфейсом - срок написания: до 17 августа, 
		сетевой манчкин - срок написания: до 1 сентября.
	Сроки выбраны приблизительно, и должны быть соблюдены, чтобы управиться до конца лета.
	Сроки могут измениться по ходу написания проекта..
1.2 Процесс реализации
	Каждый этап разбит на последовательность мелких шагов. Шаг представляет собой одну большую задачу, разбитую на независимые мелкие задачи, которые распределены между разработчиками. 
        Каждый разработчик должен решать данную ему задачу в полном объёме и сдавать её в срок, если мы хотим в продакшен за 61 день. 
	Решение представляет собой temp_project, сделанный на основе master_project. 
	Master_project предоставляется на каждом шаге мной. 
	Master_project для следующего шага делаю я, компонуя ваши temp_projectы текущего шага.  


2. Решения   
2.1 Написание решения происходит следующим образом:
		1. Составление UML диаграмм того, что вы делаете, если они ещё не составлены(обычно будут составлены)
		2. Скидывание этой диаграммы мне. Только если всё хорошо начинать выполнять следующий пункт
		3. Написание соответствующего диаграммам/заданию кода. 
			3.1. Должны быть реализованы все классы и методы, оговоренные в задании/обозначеные на диаграмме
			3.2. Каждый метод должен быть прокомментирован, как указано в "Оформлении кода"[тут цифра, соотв. пункту "Оформление кода" в документации]
			3.3. Всё неочевидное в реализациях методов должно быть прокомментировано как указано в "Оформлении кода"[тут цифра, соотв. пункту "Оформление кода" в документации]
		4. Тестирование всех написанных методов в int main();  Программа должна корректно работать при любых значениях аргументов у методов. 
		5. Написание в int main() программы-драйвера, демонстрирующей ваше решение, ;
		6. Скидывание решения(архив Munch_%вашеИмя%_%текущийШаг%.rar) мне через сообщение группе Mun4kin_dev.
	Надеюсь, что на деле всё будет происходить гораздо проще: я буду просто составлять задание, как в челлендже, а вам останется следовать пунктам 3-6.
2.2 Конфликтные ситуации
Вы не должны никоим образом менять код Master_prj, выданный на текущем шаге. Если у вас не получается воспользоваться методом какого-то класса - вы пишите мне. 


	

	

	


3. Этапы разработки
	3.1. Линейный консольный манчкин 
		3.1.x описание работы программы: 
		1 Инициализация:
			Ввод числа кол-ва игроков(от 3 до 6)
			Ввод своих данных каждым игроком(имя)
			Создание игроков	
			Создание колоды дверей(74 карты) и колоды сокровищ(72 карты) (146 карт всего). Тасование обеих колод.
			Создание пустых колод(стопок сброса, дискардов) для сброса дверей и сокровищ. Карты в них лежат рубашкой вниз.
			Сдача всем игрокам по 2 карты из каждой колоды.
			Выбор случайным образом игрока, ходящего первым
		2 Ход: 
			# - обозначает конец хода
			Возможные действия: 
				а)  одеть карту сокровищ
				a2) использовать скиллы 
				б) Произвести обмен шмотками(выложены)
				в) Продать шмотки(выложены)
				г) сбросить карты
				д) открыть дверь(Карта открывается всем игрокам):
					д.1. Если монстр -> монстр.callAction -> начало Боя[3]
					д.2. Если проклятие -> использовать его на игрока(если мгновенное сбросить карту в дискард).
					д.3. Иначе взять в руку попавшуюся карту.
				если не д.1. -> 
					е) нарваться на неприятности: призвать монстра со своей руки
					ё) Тянуть вторую карту дверей в закрытую, не активируя её.

				Перед концом хода: если в руке слишком много карт (6 для дварфов, 5 для всех остальных), отдача лишних игроку с самым низким уровнем. Если у нескольких игроков одинаково низкий уровень, разделите карты между ними настолько ровно, насколько возможно, но ваше право решать, кому достанется большая половина. Если ВЫ самого низкого уровня или один из игроков с таким уровнем, лишние карты дискардятся.
			#
			Ход следующего игрока
		3. Бой
			Расчёт силы игрока/игроков(уровень+бонусный_дамаг-дебаффы)
			Расчёт силы монста(уровень+бонусный_дамаг-дебаффы)
			Вывод предварительного результата сражения
			Возможности:
				использовать зелье, заклинание, классовую, или рассовую абилки, звать на помощь, смывка
				Если в пользу игрока: 
					биться
					Опрос всех игроков, по поводу вмешательства в бой. Варианты: 
						Использовать заклинание, проклятие, подкинуть монстра и т.п.
				Звать на помощь: 
					вводит ид игрока. 
					JK: ид_игрок указывает условия:
						a) взять n сокровищ первым или вторым. От 0 до кол-ва сокровищ монстра.
						b) взять n указанных шмоток с i[] номерами:
							указать массив номеров шмоток i[]
						c) отказаться
						отправляет усовия просившему о помощи
					страдалец принимает:
						Вступление второго игрока в бой.
						Реинициализация боя на два игрока(звать на помощь унавєйбл)
					страдалец отказывается:
						то JK
				Если игрок(и) проигрывают:
					Если не смывка
						Монстр вызывает badStuff на всех участников боя.
				Если выигравают: 
					Если игрок 1:
						забирает сокровища(закрытая)
						Если монстр умер, дать каждому определённое кол-во уровней
					Если игркоа 2:
						 Распределение сокровищ по массиву трейда(открытая)
						 Если монстр умер, дать каждому определённое кол-во уровней
				Смывка:
					Бросок кубика.
					Если кол-во очков больше чем luck(def-extra) -> смывка
					иначе Badstuff
			4. Смерть и мародерство
				При смерти выложить все карты кроме классов и рас в массив отдачи
				В порядке убывания уровня игроки выбирают по одной карте пока не разберут все. 
				Если уровни совпадают, решает кубик
			5. Применить одноразовую карту. Если у вас есть зелье, вы можете помочь кому-нибудь, применив эту карту против монстра. Конечно, вы можете "случайно" попасть зельем по этому самому другу, и оно будет считаться против него.[8]
			Сыграйть карту для усиления монстра. Эти карты делают монстра опаснее... но и дают ему больше сокровищ. Вы можете сыграть такие карты как во время своего боя, так и во время чужого.
			Сыграть Wandering Monster. Она выводит монстра из вашей руки, чтобы он присоединился к любому бою.
			Ударить в спину игрока в бою, если вы вор.
			Проклинать всех, если есть карты Проклятий. 




		
			
			
	
	2. Полноценный манчкин для игры за одним компьютером {
		Написание графических классов(классов отображения) и их связывание с классами логики.
		Введение многопоточности.
	}
	3. Сетевой манчкин {

	}

4. Ещё умные слова из лицензионного солгашения с пользователем <Точка>




